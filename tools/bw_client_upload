#!/usr/bin/env python
import os.path
import sys

def upload_dir(dir_name, bucket, prefix="", ignore_prefix=False):
	"""Upload all files in this directory to a bucket/prefix/
	@param dir_name: Name of the directory to upload from
	@param bucket: Bucket to upload to
	@param prefix: Prefix to append to the front of all uploaded files
	"""
	for item in os.listdir(dir_name):
		if not item[0] == ".":
			f_name = os.path.join(dir_name, item)
			if not ignore_prefix:
				newprefix = "%s/%s" % (prefix, os.path.basename(dir_name))
			else:
				newprefix = prefix
			if os.path.isdir(f_name):
				upload_dir(f_name, bucket, newprefix)
			else:
				upload_file(f_name, bucket, newprefix)

def upload_file(file_path, bucket, prefix=""):
	"""Upload a single file to bucket/prefix/file_name
	@param file_path: Full path to the file
	@param bucket: Bucket to upload this file to
	@param prefix: Prefix to append before the file name
	"""
	file_name = os.path.basename(file_path)
	s3_path = "%s/%s" % (prefix, file_name)
	print "Uploading %s to s3://%s/%s" % (file_path, bucket.name, s3_path),
	sys.stdout.flush()
	k = bucket.new_key(s3_path)
	k.set_contents_from_filename(file_path)
	k.make_public()
	print "............. done"
	if file_name == "index.html":
		print "Uploading index file %s to s3://%s/%s/" % (file_path, bucket.name, prefix),
		k = bucket.new_key("%s/" % prefix)
		k.set_contents_from_filename(file_path)
		k.make_public()
		print "............. done"


if __name__ == "__main__":
	if len(sys.argv) != 4:
		print "Usage: %s static_dir prefix bucket_name" % sys.argv[0]
		sys.exit(1)
	import boto
	s3 = boto.connect_s3()
	b = s3.get_bucket(sys.argv[3])
	upload_dir(sys.argv[1],b, sys.argv[2], True)
